# Use M-j as prefix
set -g prefix M-,
unbind M-,
bind M-, send-prefix

# Terminal capabilities
set -g default-terminal tmux-256color
set -g xterm-keys       on

# ------------------------------------------------------------
# Options
set  -g automatic-rename  on
set  -g base-index        1
set  -g default-command   "$INTERACTIVE_SHELL"
set  -g display-time      3000
set  -g escape-time       0
set  -g focus-events      on
set  -g history-limit     50000
set  -g mode-keys         vi
set  -g mouse             on
set  -g set-clipboard     on
set  -g set-titles        on
set  -g status-keys       emacs
set  -g status            on
set  -g visual-activity   off
set  -g visual-bell       off
setw -g aggressive-resize on
setw -g monitor-activity  on
setw -g monitor-bell      on

# Key-bindings
# ------------------------------------------------------------
# Source configuration
bind r source ~/.tmux.conf\; display "Config reloaded!"

# Vi copy mode
bind -T copy-mode-vi v     send -X begin-selection
bind -T copy-mode-vi y     send -X copy-pipe-and-cancel "xclip -selection clipboard"
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "xclip -selection clipboard && tmux paste-buffer"
bind -T copy-mode-vi H     send -X back-to-indentation
bind -T copy-mode-vi L     send -X end-of-line
bind -T copy-mode-vi J     send -X next-paragraph
bind -T copy-mode-vi K     send -X previous-paragraph

# Paste
bind M-s run "tmux send \"$(xclip -o -selection primary)\""
bind M-c run "tmux send \"$(xclip -o -selection clipboard)\""

# Create panes
bind "\\" splitw -h  -c "#{pane_current_path}"
bind "-"  splitw -v  -c "#{pane_current_path}"
bind "|"  splitw -fh -c "#{pane_current_path}"
bind "_"  splitw -fv -c "#{pane_current_path}"

# Resize panes
bind -r J resizep -D 5
bind -r K resizep -U 5
bind -r H resizep -L 5
bind -r L resizep -R 5

# Improved new window binding
unbind c
bind c neww -c "#{pane_current_path}"

# Move windows
bind -r "<" swapw -t -1
bind -r ">" swapw -t +1

# Select panes
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\ if "$is_vim" "send-keys C-\\" "select-pane -l"
bind -T copy-mode-vi C-h selectp -L
bind -T copy-mode-vi C-j selectp -D
bind -T copy-mode-vi C-k selectp -U
bind -T copy-mode-vi C-l selectp -R
bind -T copy-mode-vi C-\ selectp -l

# Use <prefix> C-l to clear screen
bind C-l send "C-l"

# Status bar
# ------------------------------------------------------------
if "test -f ~/.tmux/styles.tmux" "run \"source ~/.tmux/styles.tmux\""

# Plugins
# ------------------------------------------------------------
set -g @plugin "tmux-plugins/tpm"
set -g @plugin "tmux-plugins/tmux-prefix-highlight"
set -g @plugin "tmux-plugins/tmux-resurrect"
set -g @plugin "tmux-plugins/tmux-continuum"
set -g @plugin "tmux-plugins/tmux-copycat"
set -g @plugin "tmux-plugins/tmux-open"

# Plugin Config
set -g  @resurrect-capture-pane-contents on
set -g  @open-S "https://www.google.com/search?q="
set -g  @open-D "https://duckduckgo.com/?q="
set -g  @copycat_search_C-e "^Processing[[:space:]]by[[:space:]][^[:space:]]*" # Previous request in Rails server log

# TPM
if "test ! -d ~/.tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
run -b '~/.tmux/plugins/tpm/tpm'

# Platform-dependent configurations
# ------------------------------------------------------------
if "test -f ~/.tmux.conf.local" "source ~/.tmux.conf.local"
